@startuml
title Architecture technique - Surchope ðŸ’˜

skinparam backgroundColor #FFFFFF
skinparam componentStyle rectangle
skinparam shadowing false
skinparam ArrowColor #ec4899
skinparam rectangle {
  BackgroundColor #fff5f8
  BorderColor #ec4899
  FontColor #333
}
skinparam note {
  BackgroundColor #fff0f6
  BorderColor #ec4899
}

actor Utilisateur as user

package "Navigateur (React + Vite)" as React {
    package "UI / Composants React" as UI {
        [HomePage\n(recherche, filtres, couples)] as Home
        [AddCouplePage\n(formulaire, upload, crop)] as Add
        [CoupleCard\n(affichage, vote, rÃ©sultats)] as Card
        [Modales\n(Intro, PersonInfo, Loader...)] as Modals
    }

    package "Logique MÃ©tiers (Hooks)" as Logic {
        [useAddCoupleForm\n(validation, upload, Firestore)] as HookAdd
    }

    package "Utils" as Utils {
        [uploadToImgBB.ts\nâ†’ appel API ImgBB] as ImgBB
    }

    package "Firebase SDK" as Firebase {
        [Firestore\n(couples, people, votes temps rÃ©el)] as Firestore
        [Auth\n(connexion Google, session)] as Auth
    }
}

package "Services externes" as External {
    [ImgBB API\n(HÃ©bergement dâ€™images publiques)] as ImgBBAPI
    [Wikipedia API\n(Infos sur les personnalitÃ©s)] as Wiki
    [GitHub Pages\n(HÃ©bergement statique du site)] as GitHubPages
}

user --> Home : visite la page
Home --> Firebase : charge les couples\n(onSnapshot temps rÃ©el)
Add --> ImgBB : upload dâ€™image
Add --> Firebase : enregistre un couple
Card --> Firebase : envoie un vote
Card --> Wiki : rÃ©cupÃ¨re bio/personne (PersonInfoModal)
React --> GitHubPages : dÃ©ploiement statique
Utils --> ImgBBAPI : upload images

note right of React
Application 100% front-end (React + TypeScript)
Communication via APIs REST (Firebase, ImgBB, Wikipedia)
Aucun backend Ã  maintenir.
end note

@enduml
